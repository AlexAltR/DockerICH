version: '3.8' # используем спецификацию версии 3.8 docker-compose

services: # секция описания сервисов
  frontend: # фронтенд-сервис
    build: # настройки сборки образа
      context: ./frontend # путь к директории с Dockerfile фронтенда
      dockerfile: Dockerfile # имя Dockerfile для сборки фронтенда
    ports: # проброс портов контейнера на хост
      - "4173:4173" # внешний порт 4173 пробрасывается во внутренний 4173
    depends_on: # зависимости от других сервисов
      - backend # фронтенд запускается после запуска backend
    networks: # подключение к сети
      - webnet # сервис находится в сети webnet

  backend: # бэкенд-сервис
    build: # настройки сборки образа
      context: ./backend # путь к директории с Dockerfile бэкенда
      dockerfile: Dockerfile # имя Dockerfile для сборки бэкенда
    ports: # проброс портов контейнера на хост
      - "3002:3002" # внешний порт 3002 -> внутренний порт 3002
    environment: # переменные окружения
      MYSQL_ROOT_PASSWORD: root # задаём пароль root для MySQL
    depends_on: # зависимости от других сервисов
      - db # backend ждёт, когда поднимется сервис db
    networks: # подключение к сети
      - webnet # сервис находится в сети webnet

  db: # сервис базы данных
    image: mysql:latest # используем официальный образ MySQL последней версии
    restart: always # контейнер будет перезапускаться при сбоях
    ports: # проброс портов контейнера на хост
      - "3307:3306" # внешний порт 3307 -> внутренний порт 3306
    environment: # переменные окружения для инициализации MySQL
      MYSQL_ROOT_PASSWORD: root # пароль суперпользователя root
      MYSQL_DATABASE: mydatabase # создаём базу данных mydatabase при старте
    volumes: # подключение тома для хранения данных
      - db_data:/var/lib/mysql # данные MySQL сохраняются в томе db_data
    networks: # подключение к сети
      - webnet # сервис находится в сети webnet

volumes: # определение томов
  db_data: # том для хранения данных MySQL
    # параметры не указаны — используется диск по умолчанию Docker

networks: # определение сетей
  webnet: # логическая сеть для связи сервисов
    # параметры не указаны — Docker создаст сеть с настройками по умолчанию
